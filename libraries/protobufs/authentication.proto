syntax = "proto3";

/** Access level for operations across the whole system */
enum AccessLevel {
  Users = 0;
  Staff = 1;
  Institution = 2;
  SuperAdmin = 3;
}

/** 
 *  Authoriztion
 * the model representation stored in the database
 */
message Authorization {
   /** unique login email for institutions while phone for staffs and patients */
  string identification = 1;
  /**  access level for the authorized entity */
  AccessLevel accessLevel = 2;
  /** apikey which is only available for instutions for the external apis*/
  string apiKey = 3;
  /** the tracking id constitent to locate records atribute to the entity */
  string trackId = 4;
}

/** 
 *  AuthorizeRequest
 * representation of data requested to be sent for authentication
 */
message AuthorizeRequest {
   /** unique login email for institutions while phone for staffs and patients */
   string identification = 1;
   /** optional access level for the authorized entity */
   AccessLevel accessLevel = 2;
}

/** 
 *  AuthorizeResponse
 * representation of data sent by the server after request authentication
 * an to be verifed through otp or email
 */
message AuthorizeResponse {
   /** the id for login request to be matched with the otp*/
   string loginId = 1;
   /** the time duration when the otp is expired */
   float expires = 2;
}

/** 
 *  Login
 * tracks who and when a person request and login successfully
 */
message Login {
   /** the otp code sent */
   int64 otp = 1;
   /** the uniqueId for login */
   string id = 2;
   /** the tracking id for personnel that requested login */
   string trackingId = 3;
   /** the time duration in which the login expires */
   float expires = 4;
}

/** 
 *  AuthorizedEntity
 * 
 * data representation sent when the person has login
 * successfully
 */
message AuthorizedEntity {
   /** the keys for other services authorization */
   SecurityKeys keys = 1;
   /** the authorizationed entity data itself */
   Authorization data = 2;
}

/**
 * The keys for security means 
 */
message SecurityKeys {
/** jwt for the authorized authentication which encrypts the Authorization */
string jwt = 1;
/** optional and only available for institutions for api requests*/
string apiKey = 2;
}

/** 
 * ValidateAuthorizationReq
 *
 * data representation of the data to be sent to validate the
 * login successfully
 */
message ValidateAuthorizationReq {
   /** the otp code sent */
   int64 otp = 1;
   /** the uniqueId for login */
   string id = 2;
   /** the tracking id for personnel that requested login */
}

/** */